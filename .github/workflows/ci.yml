name: Pipeline
on: [push]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  ci:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Start timer
        id: start_timer
        run: |
         echo "START_TIME=$(date +%s)" >> $GITHUB_ENV
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'
      - name: Install dependencies
        run: cd angular/ && npm install


      - name: Log in to the Container registry

        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}


      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Stop timer
        if: failure()
        id: stop_timer
        run: |
          echo "STOP_TIME=$(date +%s)" >> $GITHUB_ENV

      - name: Check environment variables
        if: failure()
        run: |
          START_TIME=$(echo ${{ env.START_TIME }})
          STOP_TIME=$(echo ${{ env.STOP_TIME }})
          EXECUTION_TIME=$((STOP_TIME - START_TIME))
          HOURS=$((EXECUTION_TIME / 3600))
          MINUTES=$((EXECUTION_TIME % 3600 / 60))
          SECONDS=$((EXECUTION_TIME % 60))
          echo "EXECUTION_TIME_HOURS=$HOURS" >> $GITHUB_ENV
          echo "EXECUTION_TIME_MINUTES=$MINUTES" >> $GITHUB_ENV
          echo "EXECUTION_TIME_SECONDS=$SECONDS" >> $GITHUB_ENV
          echo "Execution time: $HOURS hours $MINUTES minutes $SECONDS seconds"

      - name: Send failure email
        if: success()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: "CI Pipeline Success"
          body: |
            Pipeline success! 
            Final execution time: ${{ env.EXECUTION_TIME_HOURS }} hours ${{ env.EXECUTION_TIME_MINUTES }} minutes ${{ env.EXECUTION_TIME_SECONDS }} seconds
          to: clutcherdenis@gmail.com
          from: ${{ secrets.EMAIL_USERNAME }}

      - name: Send failure email
        if: failure()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: "CI Pipeline Failure"
          body: |
            Pipeline failed (
            Final execution time: ${{ env.EXECUTION_TIME_HOURS }} hours ${{ env.EXECUTION_TIME_MINUTES }} minutes ${{ env.EXECUTION_TIME_SECONDS }} seconds
          to: clutcherdenis@gmail.com
          from: ${{ secrets.EMAIL_USERNAME }}